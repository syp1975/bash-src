#!/usr/bin/env bash
#warning: this script will reset your home folder contents using a git repository and you will loose its content!
#its purpose is to keep your home folder in sync on multiple hosts using git.
#see this post from Seth Kenlon for more info: https://opensource.com/article/21/4/git-home.
#usage:
#  sync-profile <repo> [--branch <branch-name>] [--|--key <key_file>|<curl_parameters>]
#where:
#  <repo>: git repository source (ssh)
#  <branch-name>: defaults to main
#  --: read from the tty the ssh private key
#  <key_file>: use this private key file for ssh authentication
#  <curl_parameters>: the rest of parameters are passed to curl to download the ssh private key

#repo source
src="$1"
[ -z "$src" ] && echo >&2 "${RED}git repository source is missing${NOCOLOR}" && return 1
shift

#extract name of the host that holds the repository (github.com?)
host=$(echo "$src" | sed 's/.*@\(.*\):.*/\1/')
[ -z "$host" ] && echo >&2 "${RED}git repository source should be in the form of 'user@host:path'${NOCOLOR}" && return 2

branch=main
[ "$1" == "--branch" ] && shift && branch="$1" && shift
[ -z "$branch" ] && echo >&2 "${RED}branch name is missing${NOCOLOR}" && return 3

#ssh config folder for user
cd "$HOME" || return 4
mkdir -p .ssh
chmod 700 .ssh

#private key for remote host
key_file="$HOME/.ssh/$host"
if [ "$1" == "--" ]; then
  #read from tty
  echo >&2 "${CYAN}paste the private key. press Ctrl+D to finish:${NOCOLOR}"
  key=$(cat /dev/tty)
  [ -n "$key" ] && echo "$key" > "$key_file" || key_file=''  
elif [ "$1" == "--key" ]; then
  shift
  key_file="$1"
  [ ! -r "$key_file" ] && echo >&2 "${RED}private key file is missing or not readable${NOCOLOR}" && return 5  
elif [ $# -gt 0 ]; then
  #download with curl
  curl -sfS "$@" > "$key_file"
fi

#required permissions
[ -f "$key_file" ] && chmod 600 "$key_file"

#make the home folder a repository
git init -b "$branch"

#configure git to use the private key for this repo when connecting with ssh
[ -f "$key_file" ] && git config --add --local core.sshCommand "ssh -o StrictHostKeyChecking=no -i \"$key_file\""

#clone repo in home folder and prepare it for pushing
git remote add origin "$src"
git fetch
git reset --hard "origin/$branch"
git branch --set-upstream-to origin/"$branch"

#set restrictive file permissions
chmod -Rf o-w *
chmod -Rf go= .*
